% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Layers.R
\name{LBBNN_Conv2d}
\alias{LBBNN_Conv2d}
\title{Class to generate an LBBNN convolutional layer}
\usage{
LBBNN_Conv2d(
  in_channels,
  out_channels,
  kernel_size,
  prior_inclusion,
  device = "cpu"
)
}
\arguments{
\item{in_channels}{number of input channels.}

\item{out_channels}{number of output channels.}

\item{kernel_size}{Size of the convolving kernel.}

\item{prior_inclusion}{Prior inclusion probability for each weight.}

\item{device}{The device to be used. Default is CPU.}
}
\description{
Includes function for forward pass, where one can
either use the full model, or the medium probability model (MPM).
Also contains method to initialize parameters and compute KL-divergence.
}
\examples{
layer <-  LBBNN_Conv2d(in_channels = 1,out_channels = 32,kernel_size = c(3,3),prior_inclusion = 0.2,device = 'cpu')
x <- torch_randn(100,1,28,28)
out <- layer(x)
print(dim(out))
}
